@page "/register" 
@inject ManageMyHyper.Client.Services.IUserRoleService UserRoleService
@inject NavigationManager NavigationManager 
@inject ManageMyHyper.Client.Services.IAuthenticationService AuthenticationService
@inject IToastService ToastService 

<h3>S'enregistrer</h3>
@if(UserRoleService.UserRoles.Count > 0)
{
    <EditForm Model="@user" OnValidSubmit="HandleRegistration">
        <DataAnnotationsValidator />
        <div class="form-group">
            <label for="email">Email</label>
            <InputText id="email" @bind-Value="user.Email" class="form-control" />
            <ValidationMessage For="@(() => user.Email)" />
        </div>

        <div class="form-group">
            <label for="firstName">Prénom</label>
            <InputText id="firstName" @bind-Value="user.FirstName" class="form-control" />
            <ValidationMessage For="@(() => user.FirstName)" />
        </div>

        <div class="form-group">
            <label for="lastName">Nom de famille</label>
            <InputText id="lastName" @bind-Value="user.LastName" class="form-control" />
            <ValidationMessage For="@(() => user.LastName)" />
        </div>

        <div class="form-group">
            <label for="password">Password</label>
            <InputText id="password" @bind-Value="user.Password" type="password" class="form-control" />
            <ValidationMessage For="@(() => user.Password)" />
        </div>

        <div class="form-group">
            <label for="cofirmPassword">Confirm Password</label>
            <InputText id="cofirmPassword" @bind-Value="user.ConfirmPassword" type="password" class="form-control" />
            <ValidationMessage For="@(() => user.ConfirmPassword)" />
        </div>

        <div class="form-group">
            <label for="role">Role</label>
            <InputSelect id="role" @bind-Value="user.UserRoleId" class="form-control">
                @foreach (var role in UserRoleService.UserRoles)
                    {
                    <option value="@role.Id.ToString()">@role.Name</option>
                    }
            </InputSelect>
        </div>
        <button type="submit" class="btn btn-primary">S'enregistrer</button>
    </EditForm>
}
else
{
    <span>Chargement des données...</span>
}

@code {
    ManageMyHyper.Shared.UserRegister user = new ManageMyHyper.Shared.UserRegister();

    async void HandleRegistration()
    {
        var result = await AuthenticationService.Register(user);
        if(result.Success)
        {
            ToastService.ShowSuccess(result.Message, "Succès.");
            NavigationManager.NavigateTo("");
        }
        else
        {
            ToastService.ShowError(result.Message, "Erreur.");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await UserRoleService.LoadUserRolesAsync();
        user.UserRoleId = UserRoleService.UserRoles[0].Id;
    }
}
