@page "/createworktask"
@inject ManageMyHyper.Client.Services.IWorkTaskService WorkTaskService
@attribute [Authorize(Roles = "Manager")]

<h3>Création d'une nouvelle tâche.</h3>

@if(WorkTaskService.WorkTaskPriorities.Count > 0)
{
<EditForm Model="@workTask" OnValidSubmit="HandleWorkTaskCreation">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label for="name">Nom de la tâche</label>
        <InputText id="name" @bind-Value="workTask.Name" class="form-control" />
        <ValidationMessage For="@(() => workTask.Name)" />
    </div>

    <div class="form-group">
        <label for="description">Description</label>
        <InputTextArea id="description" @bind-Value="workTask.Description" class="form-control" />
    </div>

    <div class="form-group">
        <label for="workTaskPriority">Priorité</label>
        <InputSelect id="workTaskPriority" @bind-Value="workTask.WorkTaskPriorityId" class="form-control">
            @foreach (var workTaskPriority in WorkTaskService.WorkTaskPriorities)
                {
                <option value="@workTaskPriority.Id.ToString()">@workTaskPriority.Name</option>
                }
        </InputSelect>
    </div>
    <button type="submit" class="btn btn-primary">Créer la tâche</button>
</EditForm>
}
else
{
<span>Chargement des données...</span>
}

@code {
    ManageMyHyper.Shared.WorkTask workTask = new ManageMyHyper.Shared.WorkTask();

    private async Task HandleWorkTaskCreation()
    {
        var response = await WorkTaskService.CreateNewWorkTask(workTask);
        if(response.Success)
        {
            workTask = new ManageMyHyper.Shared.WorkTask();
            workTask.WorkTaskPriorityId = WorkTaskService.WorkTaskPriorities[0].Id;
        }

    }

    protected override async Task OnInitializedAsync()
    {
        await WorkTaskService.LoadWorkTaskPrioritiesAsync();
        workTask.WorkTaskPriorityId = WorkTaskService.WorkTaskPriorities[0].Id;
    }
}
